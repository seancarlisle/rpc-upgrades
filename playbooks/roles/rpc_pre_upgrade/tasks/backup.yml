---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Create upgrade backup directory
  file:
    path: "{{ backup_dir }}"
    state: directory

- name: Backup the /etc/openstack_deploy directory
  command: "tar czf {{ backup_dir }}/openstack_deploy-{{ datetime_stamp }}.tar.gz /etc/openstack_deploy"
  tags:
    - skip_ansible_lint

# Commenting this out for now - I think this is a pointless task, this should be done before anything else happens.
#- name: Backup original playbooks
#  command: "tar czf {{ backup_dir }}/rpc-openstack-{{ datetime_stamp }}.tar.gz {{ backup_dir }}"

- name: Find backup utility
  stat:
    path: '/usr/bin/innobackupex'
  register: innobackupex

- name: Set innobackupex utility
  set_fact:
    galera_backup_program: "/usr/bin/innobackupex"
  when: innobackupex.stat.exists

- name: Set mariabackup utility
  set_fact:
    galera_backup_program: "/usr/bin/mariabackup"
  when: not innobackupex.stat.exists

- name: Perform a DB backup (using innobackupex)
  shell: "{{ galera_backup_program }} --stream=xbstream --compress - > /var/backup/galera-backup-{{ datetime_stamp }}.xbstream"
  delegate_to: "{{ groups['galera_all'][0] }}"
  when: innobackupex.stat.exists

- name: Perform a DB backup (using mariabackup)
  shell: "{{ galera_backup_program }} --backup --stream=xbstream --compress > /var/backup/galera-backup-{{ datetime_stamp }}.xbstream"
  delegate_to: "{{ groups['galera_all'][0] }}"
  when: not innobackupex.stat.exists

# Deactivated due to FLEEK-252
#- name: Copy xtrabackup
#  synchronize:
#    mode: pull
#    src: "{{ groups['galera_all'][0] }}:/var/backup/galera-backup-{{ datetime_stamp }}.xbstream"
#    dest: "{{ backup_dir }}/galera-backup-{{ datetime_stamp }}.xbstream"
